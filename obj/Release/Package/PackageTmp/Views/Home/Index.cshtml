@{
    ViewBag.Title = "Home Page";
}
<script src="../Scripts/jquery-3.3.1.min.js" type="text/javascript"></script>
<script src="../Scripts/highstock.js" type="text/javascript"></script>
<script src="../Scripts/exporting.js" type="text/javascript"></script>
<script src="../Scripts/export-csv.js" type="text/javascript"></script>

<div class="row">


</div>
    <div class="row">
        <div class="col-md-9">

            <div id="container" class="chart">
            </div>
            <div class="alert alert-dark" role="alert">
                <h1>$552.60</h1>
                <p class="lead">High:555 ,Low:555 , Open:555 ,  Close:555 </p>

            </div>
        </div>
        <div class="col-md-3">
            <div class="card" style="width: 18rem;">
                <div class="card-header">
                    Bitcoin
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">Ethereum</li>
                    <li class="list-group-item">Bitcoin(Cash)</li>
                    <li class="list-group-item">Litcoin</li>
                </ul>
            </div>
        </div>


    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Card title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <a href="#" class="card-link">Card link</a>
                    <a href="#" class="card-link">Another link</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Card title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <a href="#" class="card-link">Card link</a>
                    <a href="#" class="card-link">Another link</a>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Card title</h5>
                    <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                    <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    <a href="#" class="card-link">Card link</a>
                    <a href="#" class="card-link">Another link</a>
                </div>
            </div>
        </div>
    </div>




    <script type="text/javascript">

        $(document).ready(function () {
            //        //http://www.convertcsv.com/csv-to-json.htm
            var
            chart,
            seriesOptions = [],
            plotLinesOptions,
            yAxisOptions = [],
            seriesCounter = 0,
            //names = ['cls_pri', 'sma', 'lma', 'tRaw', 'tPoint', 'macdTpoint'],
            names = ['cls_pri', 'sma', 'lma', 'tRaw', 'tPoint'],
            colors = ['#2f7ed8', '#A31D1B', '#BD701F', '#7F23D7', '#FA0300', '#FF6633'],
            types = ['line', 'line', 'line', 'scatter', 'scatter', 'scatter'],
            //names2=['dif' , 'macd', 'osc'],
            //colors2 = ['#2f7ed8', '#A31D1B'],
            //types2 = ['line', 'line', 'column'],
            names2 = ['dif', 'macd', 'osc'],
            colors2 = ['#A31D1B', '#BD701F', '#0f2236'],
             types2 = ['line', 'line', 'column'],

            trsBData, trsSData
            ;

            ////取得MA
            //$.getJSON('jsonData/waveCut.js', function (data) {
            //    plotLinesOptions = data;
            //});
            //$.getJSON('jsonData/trsB01-2.js', function (data) {
            //    trsBData = data;
            //});
            //$.getJSON('jsonData/trsS01-2.js', function (data) {
            //    trsSData = data;
            //});
            //取得下Y軸
            $.each(names2, function (i, name) {
                //var showScatter = (i == 3 || i == 4) ? true : false;

                $.getJSON('\\jsonData\\' + name.toLowerCase() + '.js', function (data) {

                    seriesOptions[i] = {
                        id: name,
                        name: name,
                        data: data,
                        yAxis: 1,
                        type: types2[i],
                        color: colors2[i]
                    };
                    //createChart();

                });
            });

            //取得上Y軸
            $.each(names, function (i, name) {
                var showScatter = (i == 3 || i == 4 || i == 5) ? true : false;

                $.getJSON('\\jsonData\\' + name.toLowerCase() + '.js', function (data) {
                    console.log(name.toLowerCase());

                    seriesOptions[i + names2.length] = {
                        id: name,
                        name: name,
                        data: data,
                        yAxis: 0,
                        type: types[i],
                        color: colors[i],
                        marker: {
                            enabled: showScatter,
                            radius: 6,
                            states: {
                                hover: {
                                    enabled: true
                                }
                            }
                        }
                    };

                    // As we're loading the data asynchronously, we don't know what order it will arrive. So
                    // we keep a counter and create the chart when all the data is loaded.

                    //createChart();
                    seriesCounter++;
                    if (seriesCounter == names.length) {
                        //bTrs
                        seriesOptions.push({
                            type: 'flags',
                            name: 'trsB',
                            data: trsBData,
                            yAxis: 0,
                            width: 16,
                            color: '#FF1989',
                            fillColor: '#FF1989',
                            style: {// text style
                                color: 'white'
                            },
                            states: {
                                hover: {
                                    fillColor: '#DC006B' // darker
                                }
                            },
                            shape: 'circlepin',
                            stackDistance: 20,
                            y: 100,
                            onSeries: 'cls_pri' //serie id
                        });
                        //bTrs
                        seriesOptions.push({
                            type: 'flags',
                            name: 'trsS',
                            data: trsSData,
                            yAxis: 0,
                            width: 16,
                            color: '#FF1989',
                            fillColor: '#FF1989',
                            style: {// text style
                                color: 'white'
                            },
                            states: {
                                hover: {
                                    fillColor: '#DC006B' // darker
                                }
                            },
                            shape: 'circlepin',
                            stackDistance: 20,
                            y: -100,
                            onSeries: 'cls_pri' //serie id
                        });
                        createChart();
                    }
                });
            });


            // create the chart when all data is loaded
            function createChart() {

                chart = new Highcharts.StockChart({
                    chart: {
                        renderTo: 'container',
                        height: 700
                    },
                    credits: {
                        enabled: false
                    },
                    rangeSelector: {
                        selected: 2 //選取週期(左上選項)
                    },
                    xAxis: {
                        type: 'datetime',
                        plotLines: plotLinesOptions

                    },

                    yAxis: [{
                        title: {
                            text: 'Price'
                        },
                        height: 400,
                        lineWidth: 2
                    }, {
                        title: {
                            text: 'MACD'
                        },
                        top: 450,
                        height: 160,
                        offset: 0,
                        lineWidth: 2
                    }],
                    //                tooltip: {
                    //                    pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',
                    //                    valueDecimals: 2
                    //                },
                    plotOptions: {
                        series: {
                            allowPointSelect: true,
                            point: {
                                events: {
                                    select: function () {
                                        //   $("#report").html(  this.y +' was last selected');
                                        $("#x").val(this.x);
                                        console.log(this.x);
                                        console.log(this.y);
                                    }
                                }
                            }
                        }
                    },
                    series: seriesOptions
                });
            }

            $("#a").click(function () {
                //http://jsfiddle.net/sH777/180/
                //   var flagDate = $("#c").val().split("-");

                console.log($("#x").val());
                console.log($("#d").val());
                console.log($("#e").val());
                console.log($("#g").val());
                console.log($("#h").val());
                console.log($("#f").val());

                var add = chart.addSeries({
                    type: 'flags',
                    name: $("#x").val(),
                    data: [{
                        x: $("#x").val(),//Date.UTC(flagDate[0], flagDate[1], flagDate[2]) - 2678400000 ,//2419200000, //$("#c").val(),
                        title: $("#d").val(),
                        text: $("#e").val()
                    }],
                    color: $("#g").val(),
                    fillColor: $("#g").val(),
                    style: {// text style
                        color: $("#h").val()
                    },
                    shape: 'circlepin',
                    stackDistance: 20, //每個FLAG距離
                    y: $("#f").val() * -1,  //離序列的距離
                    onSeries: 'cls_pri', //serie id
                    //showInLegend: false
                }, false);
                // do some stuff

                chart.redraw();
            });


            $("#b").click(function () {//remove
                var seriesLength = chart.series.length;
                for (var i = seriesLength - 1; i > -1; i--) {
                    if (chart.series[i].name == $("#x").val()) {
                        chart.series[i].remove();
                    }
                    chart.redraw();
                }
            });

            $("#export").click(function () {
                var text = chart.getCSV();
                console.log(text);
                $("#result").val(text);
            });
        });




    </script>
